services:
    frosas_misc.common_missing_files_ignoring:
        class: Frosas\MiscBundle\EventListener\CommonMissingFilesIgnoring
        tags:
          - {name: kernel.event_listener, event: kernel.exception}

    frosas_misc.controller_initialization:
      class: Frosas\MiscBundle\EventListener\ControllerInitialization
      tags:
        - {name: kernel.event_listener, event: kernel.controller}

    frosas_misc.service_validator:
        class: Frosas\MiscBundle\Constraint\ServiceValidator
        arguments: [@service_container]
        tags:
            - {name: validator.constraint_validator, alias: frosas_misc.service_validator}

    frosas_misc.swift_mailer_logger:
        class: Frosas\MiscBundle\SwiftMailerLogger
        arguments: [@logger, @swiftmailer.transport]
        tags:
            - {name: monolog.logger, channel: mailer}

    frosas_misc.entity_validation:
        class: Frosas\MiscBundle\EventListener\EntityValidation
        arguments: [@validator]
        tags:
            - {name: doctrine.event_listener, event: onFlush}

    frosas_misc.no_entity_flush_overlapping:
        class: Frosas\MiscBundle\EventListener\NoEntityFlushOverlapping
        tags:
            # We want to start monitoring after all other preFlushes and stop before
            # all other postFlushes as flushing there is allowed
            - {name: doctrine.event_listener, event: preFlush, priority: 9999}
            - {name: doctrine.event_listener, event: postFlush, priority: -9999}

    frosas_misc.extra_logging:
        class: Frosas\MiscBundle\EventListener\ExtraLogging
        arguments: [@logger]
        tags:
            - {name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 255}
            - {name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 255}
